---
import { getUniqueTags } from "@utils/getUniqueTags";
import { getPostsByTag } from "@utils/getPostsByTag";
import type { GetStaticPaths } from "astro";
import { getCollection, type CollectionEntry } from "astro:content";
import { getPageNumbers } from "@utils/getPageNumbers";
import { getPagination } from "@utils/getPagination";
import TagPosts from "@layouts/tag-posts.astro";

export interface Props {
  post: CollectionEntry<"blog">;
  tag: string;
  tagName: string;
}

export async function getStaticPaths() {
  const posts = await getCollection("blog");

  const tags = getUniqueTags(posts);
  console.log("test");
  return tags.flatMap(({ tag, tagName }) => {
    const tagPosts = getPostsByTag(posts, tag);
    const totalPages = getPageNumbers(tagPosts.length);

    return totalPages.map((page) => ({
      params: { tag, page },
      props: { tag, tagName },
    }));
  });
}

const { page } = Astro.params;
const { tag, tagName } = Astro.props;

const posts = await getCollection("blog");

const postsByTag = getPostsByTag(posts, tag);

const pagination = getPagination({ posts: postsByTag, page });
---

<TagPosts
  totalPages={pagination.totalPages}
  currentPage={pagination.currentPage}
  tag={tag}
  tagName={tagName}
  paginatedPosts={pagination.paginatedPosts}
/>
